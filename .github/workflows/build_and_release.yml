# This is a basic workflow to help you get started with Actions

name: Build and release Rust toolchain for the BlueOS kernel

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout libc
        uses: actions/checkout@v4
        with:
          repository: vivoblueos/libc
          ref: blueos-dev
          path: libc

      - name: Checkout cc-rs
        uses: actions/checkout@v4
        with:
          repository: vivoblueos/cc-rs
          ref: blueos-dev
          path: cc-rs

      - name: Checkout rust
        uses: actions/checkout@v4
        with:
          repository: vivoblueos/rust
          ref: blueos-dev
          path: rust

      - name: Build Rust toolchain
        env:
          DESTDIR: /tmp/blueos-sysroot
          CARGO_NET_GIT_FETCH_WITH_CLI: true
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libssl-dev pkg-config
          cd rust
          cp config.blueos.toml config.toml
          ./x.py install -i --stage 1 compiler/rustc
          ./x.py install -i --stage 1 library/std --target x86_64-unknown-linux-gnu
          ./x.py install -i --stage 1 library/std --target aarch64-vivo-blueos-newlib
          ./x.py install -i --stage 1 library/std --target thumbv7m-vivo-blueos-newlibeabi
          ./x.py install -i --stage 1 library/std --target thumbv8m.main-vivo-blueos-newlibeabihf
          ./x.py install -i --stage 1 library/std --target riscv64-vivo-blueos
          ./x.py install -i --stage 1 library/std --target riscv32-vivo-blueos
          ./x.py install -i --stage 1 library/std --target riscv32imc-vivo-blueos
          ./x.py install -i --stage 0 rustfmt
          ./x.py install -i --stage 0 rust-analyzer
          ./x.py install -i --stage 0 clippy
          cp -ravf build/x86_64-unknown-linux-gnu/llvm/{bin,lib} ${DESTDIR}/usr/local

